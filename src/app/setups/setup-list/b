<div class="setup-list-component">

    <div class="mat-h1">{{title}}</div>

    <table mat-table [dataSource]="setups" class="mat-elevation-z8" multiTemplateDataRows>

        <ng-container matColumnDef="{{column.title}}" *ngFor="let column of columns">
            <th mat-header-cell *matHeaderCellDef> {{column.title | uppercase}} </th>
            <td mat-cell *matCellDef>{{getPropertyValue(column.propertyPath)}}</td>
        </ng-container>

        <ng-container matColumnDef="expandedDetail">
            <td mat-cell *matCellDef="let element" [attr.colspan]="columns.length">
                <div class="setup-element-detail" [@detailExpand]="element == expandedElement ? 'expanded' : 'collapsed'">

                    <app-setup-list-expanded-detail [setup]="element">
                    </app-setup-list-expanded-detail>
                </div>
            </td>
        </ng-container>

        <tr mat-header-row *matHeaderRowDef="getDisplayedColumns()">
        </tr>
        <tr mat-row *matRowDef="let element; columns: getDisplayedColumns();" matRipple class="element-row" [class.expanded-row]="expandedElement === element" (click)="toggleExpandedRow(element)"></tr>
        <tr mat-row *matRowDef="let row; columns: ['expandedDetail']" class="setup-detail-row"></tr>

    </table>

</div>










table {
    width: 100%;
}

tr.setup-detail-row {
    height: 0;
}

tr.element-row:not(.expanded-row):hover {
    background: #777;
}

tr.element-row:not(.expanded-row):active {
    background: #efefef;
}

.element-row td {
    border-bottom-width: 0;
}

.collapsed td {
    background-color: whitesmoke;
    color: #37474F;
}

.expanded td {
    border-bottom-width: 0;
    background-color: #37474F;
    color: whitesmoke;
    height: 0;
}

.setup-element-detail {
    overflow: hidden;
    display: flex;
}

.setup-list-component {
    .mat-h1 {
        color: #37474F;
    }
}